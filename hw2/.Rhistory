fit.1 <- lm(data = wait.melt)
print('fun')
install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie <- read.html("http://www.imdb.com/title/tt1490017/")
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
Deprecated?
?Deprecated
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
head(lego_movie)
install.packages("Rglpk")
install.packages("lpSolve")
install.packages("Rsymphony")
library("Rglpk")
library("lpSolve")
library(Rsymphony)
MIN z = 20P1+60P2
install.packages("lpSoleAPI")
install.packages("lpSolveAPI")
obj.fun <- c(20,60)
constr <- matrix(c(30,20,5,10,1,1), ncol = 2, byrow = TRUE)
library(lpSolve)
constr.dir <- c("<=","<=",">=")
rhs <- c(2700,850,95)
prod.sol <- lp("max", obj.fun,constr,constr.dir,rhs,compute.sens = TRUE)
prod.sol$duals.from
prod.sol$duals.to
prod.sol$sens.coef.from
prod.sol$sens.coef.to
prod.sol$obj.val
prod.sol$solution
prod.sol$duals
obj.fun <- c(8,6,3,2,4,9)
m <- 2
n <- 3
constr <- matrix(0,n+m,n*m)
for(i in 1:m){}
for(i in 1:m){}
library ( lpSolve )
#defining parameters
#origins run i in 1:m
#destinations run j in 1:n
obj.fun <- c(8 , 6 , 3 , 2 , 4 , 9)
m <- 2
n <- 3
constr <- matrix (0 , n +m , n*m )
for ( i in 1: m ) {
for ( j in 1: n ) {
constr [i , n*(i -1) + j ] <- 1
constr [ m +j , n*(i -1) + j ] <- 1
}
}
constr.dir <- c(rep(" <=", m ) , rep(" >=", n ) )
rhs <- c(70 , 40 , 40 , 35 , 25)
#solving LP model
prod.trans <- lp (" min", obj.fun , constr , constr.dir , rhs ,
compute.sens = TRUE )
#LP solution
prod.trans $obj.val
sol <- matrix ( prod.trans $ solution , m , n , byrow = TRUE )
prod.trans $ duals
#sensitivity analysis of LP
prod.trans $ duals.from
prod.trans $ duals.to
prod.trans $ sens.coef.from
prod.trans $ sens.coef.to
library ( lpSolve )
#defining parameters
#origins run i in 1:m
#destinations run j in 1:n
obj.fun <- c(8 , 6 , 3 , 2 , 4 , 9)
m <- 2
n <- 3
constr <- matrix (0 , n +m , n*m )
for ( i in 1: m ) {
for ( j in 1: n ) {
constr [i , n*(i -1) + j ] <- 1
constr [ m +j , n*(i -1) + j ] <- 1
}
}
constr.dir <- c(rep(" <=", m ) , rep(" >=", n ) )
rhs <- c(70 , 40 , 40 , 35 , 25)
#solving LP model
prod.trans <- lp (" min", obj.fun , constr , constr.dir , rhs ,
compute.sens = TRUE )
#LP solution
prod.trans$obj.val
sol <- matrix ( prod.trans$solution , m , n , byrow = TRUE )
prod.trans$duals
#sensitivity analysis of LP
prod.trans$duals.from
prod.trans$duals.to
prod.trans$sens.coef.from
prod.trans$sens.coef.to
constr <- matrix (0 , n +m , n*m )
for ( i in 1: m ) {
for ( j in 1: n ) {
constr [i , n*(i -1) + j ] <- 1
constr [ m +j , n*(i -1) + j ] <- 1
}
}
constr.dir <- c(rep(" <=", m ) , rep(" >=", n ) )
rhs <- c(70 , 40 , 40 , 35 , 25)
prod.trans <- lp(" min", obj.fun , constr, constr.dir, rhs,
compute.sens = TRUE )
prod.trans <- lp("min", obj.fun , constr, constr.dir, rhs,
compute.sens = TRUE )
constr.dir <- c(rep("<=", m ) , rep(">=", n ) )
rhs <- c(70 , 40 , 40 , 35 , 25)
prod.trans <- lp("min", obj.fun , constr, constr.dir, rhs,
compute.sens = TRUE )
prod.trans$obj.val
sol <- matrix ( prod.trans$solution , m , n , byrow = TRUE )
prod.trans$duals
#sensitivity analysis of LP
prod.trans$duals.from
prod.trans$duals.to
prod.trans$sens.coef.from
prod.trans$sens.coef.to
prod.trans
prod.sol
return(results)
rhs
Minimize
cost: 12q1
prod.sol
prod.trans
constr.dir
install.packages("rmdformats")
library(rmarkdown)
render("hw2.Rmd")
setwd("C:/Users/jaturman/Desktop/data analysis/ops804/course work/hw2")
render("hw2.Rmd")
output: html_document
format: readthedown
